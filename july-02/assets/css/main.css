/* *----------------------------------------{{{
 * Author    : Kristopher Watts
 * Email     : kristopher.a.watts@gmail.com
 * Website   : http://Webtastic-Development.net
 * Github    : https://github.com/uncledozer
 * License   : GNU (See License.MD for Details)
 * Copywrite : 2015
 * *----------------------------------------}}}
 */
/* *----------------------------------------
 * BREAKPOINTS{{{
 * *----------------------------------------
 *
 * Use min-device-width for Ios devices
 * *------------------------
 *
 * $smartphone-landscape : (min-device-width: 321px);
 * $smartphone-portrait  : (max-device-width: 320px);
 * $tablet-landscape     : (min-device-width: 768px);
 * $tablet-portrait      : (max-device-width: 769px);
 * $desktop              : (min-width: 1224px);
 * $desktop-large        : (min-width: 1824px);
 * @include breakpoint(breakpointname){
 *   Styles
 * }
 */
/* }}}
 *----------------------------------------
 */
/* *----------------------------------------
 * MIXINS{{{
 * *----------------------------------------
 */
/**
 * SeCSSY Functions
 *
 */
/**
 * Recursively search nested lists
 * and return a key.
 *
 * @Param $map The target map
 *
 * @Param $keys The last key value is returned.
 * All keys before the last are treated as nested maps.
 */
/**
 * Recursively search the $GLOBALS list and return a key value
 * Acts as a visually identifiable get() function.
 *
 * @Param $keys The last key value is returned.
 * All keys before the last must be treated as nested maps.
 */
/**
 * SCSS color functions don't play nicely
 * with lists, so assign an existing variable
 * containing the list key value.
 *
 * @Param $targetVar The variable to reassign
 *
 * @Param $map The target map
 *
 * @Param $keys Convert last key to variable
 * All keys before the last must be nested maps.
 */
/**
 * Pretty up the @import var
 *
 */
/**
 * @Author Kristopher Watts <kristopher.a.watts@gmail.com>
 * @CopyWrite 2015 Kristopher Watts
 * @Website http://webtastic-development.net/SECCSY
 *
 */
/**
 * Vendor Prefixes!
 */
/**
 * Create an element to fill remaining
 * width of container element
 *
 */
/**
 * Often used css attributes that require prefixes
 *
 */
/* *----------------------------------------
 * threeD( $color, $size, $step, $blur, $textShadow );
 * Three Dimensional text effect
 * {{{
 * *----------------------------------------
 * @Param string|css-color $color
 *
 * @Param integer $size denotes the
 * initial size to start shadow size at
 *
 * @Param integer $step denotes the size
 * increase for each subsequent shadow
 *
 * @Param integer $blur applies shadow blur
 *
 * @Param boolean $textshadow if true apply text-shadow
 * if false, apply box-shadow
 */
/* }}}
 * *----------------------------------------
 */
/* *----------------------------------------
 * progressBar( $class ) { @content }
 * Prefix aware HTML5 progress-bar styling
 * {{{
 * *----------------------------------------
 */
/* }}}
 * *----------------------------------------
 */
/* *----------------------------------------
 * GLOBAL VARIABLES{{{
 * *----------------------------------------
 * 1: Colors
 * 2: Fonts
 *  2.1: Weights
 *  2.2: Sizes
 * 3: Breakpoints
 * }}}
 * ----------------------------------------
 */
/* Design A Week Vars, July 01 */
/*
 * *----------------------------------------
 * Layout Styles
 * *----------------------------------------
 * Styles throughout the website
 *
 */
* {
  box-sizing: border-box; }

html {
  font-size: 100%; }

body {
  background: #F5F5F5; }

h1,
h2 {
  width: 100%;
  text-align: center;
  color: #F5F5F5; }

h1 {
  font-size: 9rem;
  /* color: lighten( $background, 15% ); */
  color: #F5F5F5;
  text-shadow: 0px -4 0 #cacaca;
  text-shadow: 0px 2px 1px #cacaca, 0px 0px 0px #c5c5c5, 0px 4px 0px #bfbfbf, 0px 8px 0px #bababa, 3px 8px 15px rgba(0, 0, 0, 0.1), 3px 8px 5px rgba(0, 0, 0, 0.3); }

h2 {
  font-size: 2rem;
  text-shadow: 0px -2 0 #cacaca;
  text-shadow: 0px 2px 1px #cacaca, 0px 0px 0px #c5c5c5, 0px 2px 0px #bfbfbf, 0px 4px 0px #bababa, 3px 8px 15px rgba(0, 0, 0, 0.1), 3px 8px 5px rgba(0, 0, 0, 0.3); }

a, h3 {
  text-shadow: 0px -1 4 #b0b0b0;
  text-shadow: 0px 2px 1px #b0b0b0, 0px 1px 4px #ababab, 0px 3px 4px #a6a6a6, 0px 5px 4px #a1a1a1, 3px 8px 15px rgba(0, 0, 0, 0.1), 3px 8px 5px rgba(0, 0, 0, 0.3);
  color: #F5F5F5;
  text-align: center;
  font-size: 2.6rem;
  text-decoration: none; }

h3 {
  margin: 0;
  background: #e8e8e8;
  color: white;
  box-shadow: 0px -3 5 #cacaca;
  box-shadow: 0px 2px 1px #cacaca, 0px 3px 5px #c5c5c5, 0px 9px 5px #bfbfbf, 0px 15px 5px #bababa, 3px 8px 15px rgba(0, 0, 0, 0.1), 3px 8px 5px rgba(0, 0, 0, 0.3); }
