/**
 * SeCSSY Functions
 *
 */

/**
 * Recursively search nested lists
 * and return a key.
 *
 * @Param $map The target map
 *
 * @Param $keys The last key value is returned.
 * All keys before the last are treated as nested maps.
 */
@function get( $map, $keys... ) {
    @each $key in $keys {
        $map: map-get( $map, $key );
    }
    @return $map;
}

/**
 * Recursively search the $GLOBALS list and return a key value
 * Acts as a visually identifiable get() function.
 *
 * @Param $keys The last key value is returned.
 * All keys before the last must be treated as nested maps.
 */
@function global( $keys... ) {
    @return get( $GLOBALS, $keys... );
}

/**
 * SCSS color functions don't play nicely
 * with lists, so assign an existing variable
 * containing the list key value.
 *
 * @Param $targetVar The variable to reassign
 *
 * @Param $map The target map
 *
 * @Param $keys Convert last key to variable
 * All keys before the last must be nested maps.
 */
@function assignVar( $map, $keys... ) {
    $value: get( $map, $keys... );
    @return "#{$value}";
}

/**
 * Pretty up the @import var
 *
 */

